<?php

/**
 * Implementation of hook_views_api().
*/
function balanceonline_og_like_views_api() {
  return array(
    'api' => 2.0,
  );
}


//function balanceonline_og_like_og_links_alter(&$links) {
//  global $user;
//
//	if(isset($links['create_blog'])){
//		$links=array('create'=>'<div style="color:#000000;">Inhalt erstellen</div>') + $links;
//	}
//}
/**
 * Implementation of hook_menu().
 */

function balanceonline_og_like_menu() {
  // Anon users should be able to get to the join page
  $items['ogc/subscribe/%node'] = array(
    'type' => MENU_CALLBACK,
    'file path' => drupal_get_path('module', 'og'),
    'file' => 'og.pages.inc',
    'page callback' => 'balanceonline_og_like_subscribe',
    'page arguments' => array(2),
    'access callback' => 'node_access',
    'access arguments' => array('view', 2),
    'title' => 'Join group'
  );
// Anon users should be able to get to the join page
  $items['fan/subscribe/%node'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'balanceonline_og_like_page',
    'access callback' => 'node_access',
    'access arguments' => array('view', 2),
    'page arguments' => array(2),
    'title' => 'Be a group fan'
  );
  $items['fan/unsubscribe/%node'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'balanceonline_og_like_unsubscribe_page',
    'access callback' => 'node_access',
    'access arguments' => array('view', 2),
    'page arguments' => array(2),
    'title' => 'Be not longer a group fan'
  );
    return $items;
}

  function balanceonline_og_like_subscribe($node, $uid = NULL) {
  global $user;
  
  if (is_null($uid)) {
    if ($user->uid) {
      $account = $user;
    }
    else {
      $dest = drupal_get_destination();
      if (variable_get('user_register', 1) == 0) {
        drupal_set_message(t('In order to join this group, you must <a href="!login">login</a>. After you have successfully done so, you will need to request membership again.', array('!login' => url("user/login", array('query' => $dest)))));
      }
      else {
        drupal_set_message(t('In order to join this group, you must <a href="!login">login</a> or <a href="!register">register</a> a new account. After you have successfully done so, you will need to request membership again.', array('!register' => url("user/register", array('query' => $dest)), '!login' => url("user/login", array('query' => $dest)))));
      }
      drupal_goto('user');
    }
  }
  else {
    $account = user_load(array('uid' => $uid));
  }

  if ($node->og_selective >= OG_INVITE_ONLY || $node->status == 0 || !og_is_group_type($node->type)) {
    drupal_access_denied();
    exit();
  }

  // Only admins can add another member.
  if ($account->uid != $user->uid && !og_is_group_admin($node)) {
    drupal_access_denied();
    exit();
  }
  else {
    return drupal_get_form('og_confirm_subscribe', $node->nid, $node, $account);
  }
}


/**
 * Implementation of hook_block().
 */
function balanceonline_og_like_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[0]['info'] = t('Custom Group details');
    $blocks[0]['cache'] = BLOCK_NO_CACHE;
    return $blocks;
  }
  elseif ($op == 'view') {
    switch ($delta) {
      case 0:
        return balanceonline_og_like_block_details();
    }
  }
}

function balanceonline_og_like_block_details() {
  global $user;

  // Only display group details if we have a group context.
  if (($node = og_get_group_context()) && node_access('view', $node)) {

  $user_roles = og_user_roles_get_og_roles($user->uid, $node->nid);


    $onlyfan=true;
    if(array_key_exists(10, $user_roles) && !array_key_exists(7, $user_roles)){
      $onlyfan=false;
    }

    list($txt, $subscription) = og_subscriber_count_link($node);
    if ($subscription == 'active' && $onlyfan || user_access('administer nodes')) {
      $links = module_invoke_all('og_create_links', $node);
      // We want to open this up for OG_INVITE_ONLY but we need to handle invitation workflow much better. See http://drupal.org/node/170332
      if ($node->og_selective < OG_INVITE_ONLY) {
        $links['invite'] = l(t('Invite friend'), "og/invite/$node->nid");
      }

      $links_manage['subscribers'] = $txt;

      // Site admins get a Join link if they are not yet subscribed.
      $subscribe = isset($subscription) && og_is_group_member($node->nid, FALSE) ? l(t('My membership'), "og/manage/$node->nid") : og_subscribe_link($node);
      if(isset($subscribe)) {
        $links_manage['my_membership'] = $subscribe;
      }
    }
    elseif ($subscription == 'requested') {
      $links_manage['approval'] = t('Your membership request awaits approval.');
      $links_manage['delete'] = l(t('Delete request'), "og/unsubscribe/$node->nid/$user->uid", array('query' => 'destination=og'));
    }
    elseif (!$user->uid) {
      $dest = drupal_get_destination();
      if (variable_get('user_register', 1) == 0) {
        $links_manage['must_login'] = t('You must <a href="!login">login</a> in order to post into this group.', array('!login' => url("user/login", array('query' => $dest))));
      }
      else {
        $links_manage['must_login'] = t('You must <a href="!register">register</a> or <a href="!login">login</a> in order to post into this group.', array('!register' => url("user/register", array('query' => $dest)), '!login' => url("user/login", array('query' => $dest))));
      }
    }
    elseif ($node->og_selective < OG_INVITE_ONLY) {
      $links_manage['subscribe'] = balanceonline_og_like_subscribe_link($node);
    }
    elseif ($node->og_selective == OG_INVITE_ONLY) {
      $links_manage['closed'] = t('This is an <em>invite only</em> group. The group administrators add/remove members as needed.');
    }
    elseif ($node->og_selective == OG_CLOSED) {
      $links_manage['closed'] = t('This is a <em>closed</em> group. The group administrators add/remove members as needed.');
    }


    /*Like Button */

    //10 = Fan
    // 7 = Project Member
    if ($user->uid) {
    if($subscription != 'requested'){
        if(!array_key_exists(10, $user_roles) && !array_key_exists(7, $user_roles)){
          $links_manage['like'] = l("Gefällt mir", "fan/subscribe/$node->nid");
        }
        if(array_key_exists(10, $user_roles)){
          $links_manage['unlike'] = l("Gefällt mir nicht mehr", "fan/unsubscribe/$node->nid");
        }
    }
    }

    // Modify these links by reference. If you want control of the whole block, see og_block_details().
    drupal_alter('og_links', $links, $node);
	drupal_alter('og_links', $links_manage, $node);
	
	$htitle = "<h3>Inhalt erstellen</h3>";
	if (empty($links) == true) {
    	$htitle = "";
	}
	
	
    $block['content'] = $htitle.theme('item_list', $links)."<h3>Gruppe verwalten</h3>".theme('item_list', $links_manage);
    $block['subject'] = l($node->title, "node/$node->nid");
    return $block;
  }
}

function balanceonline_og_like_subscribe_link($node) {
  if ($node->og_selective == OG_MODERATED) {
    $txt = t('Request membership');
  }
  elseif ($node->og_selective == OG_OPEN) {
    $txt = t('Join');
  }
  if(isset($txt))
    return l($txt, "ogc/subscribe/$node->nid", array('attributes' => array('rel' => 'nofollow'), 'query' => drupal_get_destination()));
}


function balanceonline_og_like_page($node){
   return drupal_get_form('fan_subscribe_form',$node->nid);
};

function balanceonline_og_like_unsubscribe_page($node){
   return drupal_get_form('fan_unsubscribe_form',$node->nid);
};

function fan_subscribe_form($form_state,$nid) {
  $form['nid'] = array('#type' => 'hidden', '#value' => $nid);
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  return $form;
}

function fan_unsubscribe_form($form_state,$nid) {
  $form['nid'] = array('#type' => 'hidden', '#value' => $nid);
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  return $form;
}

function fan_subscribe_form_submit($form, &$form_state) {
  global $user;
  //$message = 'You have submitted the ' . $form_id . ' form which contains the following data:<pre>' . print_r($form_values,true) . '</pre>';
  $group_id = $form_state['values']['nid'];
  $user_id = $user->uid;
  //fan group ID = 10
  $role_id = 10;
   og_user_roles_role_join($user_id, $role_id, $group_id);
   og_save_subscription($group_id, $user_id, array('is_active' => 1));

   $form_state['redirect'] = "node/$group_id";
  //drupal_set_message(t($form_values['values']['nid']));
}

function fan_unsubscribe_form_submit($form, &$form_state) {
  global $user;
  //$message = 'You have submitted the ' . $form_id . ' form which contains the following data:<pre>' . print_r($form_values,true) . '</pre>';
  $group_id = $form_state['values']['nid'];
  $user_id = $user->uid;
  //fan group ID = 10
  $role_id = 10;
   og_user_roles_role_delete($user_id, $role_id, $group_id);
   og_delete_subscription($group_id, $user_id);
   $form_state['redirect'] = "node/$group_id";
  //drupal_set_message(t($form_values['values']['nid']));
}
?>